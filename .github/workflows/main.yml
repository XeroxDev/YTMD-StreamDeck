name: CI-CD

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  TestAndDeploy:
    runs-on: windows-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4

      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          path: './'
          fetch-depth: 0

      - name: Install dependencies
        run: |
          if [ -e package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: release-please
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          default-branch: master

      - name: Run build
        run: npm run build

      - name: Create distribution folder
        run: |
          mkdir fun.shiro.ytmd.sdPlugin
          copy sdpi.css fun.shiro.ytmd.sdPlugin\
          copy manifest.json fun.shiro.ytmd.sdPlugin\
          copy property-inspector.html fun.shiro.ytmd.sdPlugin\
          copy action.html fun.shiro.ytmd.sdPlugin\
          copy bundle.js fun.shiro.ytmd.sdPlugin\
          copy bundle-pi.js fun.shiro.ytmd.sdPlugin\
          copy icons fun.shiro.ytmd.sdPlugin -Recurse

      - name: Download Stream Deck Distribution Tool
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://developer.elgato.com/documentation/stream-deck/distributiontool/DistributionToolWindows.zip
          file-name: distribution-tool.zip

      - name: Unzip Stream Deck Distribution Tool
        run: tar -xf .\distribution-tool.zip

      - name: Validate plugin and build .streamDeckPlugin file
        run: ./DistributionTool.exe -b -i fun.shiro.ytmd.sdPlugin -o ./

      - name: Upload Release Artifact
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./fun.shiro.ytmd.streamDeckPlugin --clobber